---
title: "Early Resource Binding"
short: erb
layout: "smell"
affects:
    - Energy Efficiency
context:
    - Implementation
    - UI
refactorings:
    - move_resource_request_to_visible_method
tags:
    - gps
    - energy
necessity: statically structure-based
sufficiency:
---

## Context

<%= @document.context %>

## Affects

<%= @document.affects %>

## Problem

Gottschalk, Joseﬁok, Jelschen and Winter discussed in "Removing Energy Code Smells with Reengineering Services"
that if physical, energy-consuming resources of an Android device are requested too early more energy is consumed.
More precisely, "too early" means when they are requested in methods being executed before the user is interacting with the app.

For instance, in the following example the GPS component of an Android device is requested in the 'onCreate()' method already.
Thus, the GPS physical component consumes energy while the user isn't interacting with any map since nothing is visible yet.
This example is taken from the above mentioned publication:

```
public class GpsPrint extends Activity implements OnClickListener, Listener, LocationListener {
    
    private LocationManager lm;

    public void onCreate(Bundle savedInstanceState) {
        lm = (LocationManager)this.getSystemService(Context.LOCATION_SERVICE);
        if(lm.getAllProviders().contains(LocationManager.GPS_PROVIDER)){
            if(lm.isProviderEnabled(LocationManager.GPS_PROVIDER)){
                lm.addGpsStatusListener(this);
                // here the physical component is requested and consumes energy
                // but the user cannot yet interact with the app in this state
                lm.requestLocationUpdates(LocationManager.GPS_PROVIDER, 1000, 0, this);
                statusView.setText(”GPS service started”);
            } else {
                statusView.setText(”Please enable GPS”);
                saveLocationButton.setEnabled(false);
            }
        }
    }

    public void onPause() {
        lm.removeUpdates(this);
    }
}
```

## Refactorings

<% for refactoring in @getRefactorings(): %>
<%- @include(refactoring) %>
<% end %>

## Links
- [Gottschalk, Joseﬁok, Jelschen, Winter (2012) Removing Energy Code Smells with Reengineering Services](http://www.researchgate.net/publication/235705377_Removing_Energy_Code_Smells_with_Reengineering_Services/file/79e41512c806145a21.pdf)
- [API documentation of Activity with lifecycle diagram](https://developer.android.com/reference/android/app/Activity.html)
- [Android Documentation regarding the lifecycle states of Android Activities](http://developer.android.com/guide/components/activities.html#ImplementingLifecycleCallbacks)